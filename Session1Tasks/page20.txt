First  upper left box:
#output appeared like that because the number is unsigned 
#char is 1-byte based
#so range of values from 0 to 255
#-1 has binary equivalent=0b1111_1111

Second upper right box:
#Range of char datatype is from -128 to 127
#It is also compiler dependendt,by default char is signed
#so as 128 exceeds 127 and assigned in it -128

Third lower left box:
#as 255 exceeds 127 , so as range from -128--->127
#and 255-128 =127 , so add 127 steps over -128 , so equivalent to 0 in the signed range



Fouth lower right box:

#as 258 exceeds 127 it overflows over 127 and
258 exceeds 0 value by 3 steps so equivalent to 3 in positive range


Note:
char signed : -128--->127
char unsigned: 0----->255
In our compiler g++: char is signed by default

